# Generated by Django 5.2.4 on 2025-10-14 08:40

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0004_company_name_mr_product_name_mr_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='productsku',
            options={'ordering': ['-created_at'], 'verbose_name': 'Product SKU', 'verbose_name_plural': 'Product SKUs'},
        ),
        migrations.AddField(
            model_name='company',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='product',
            name='application_method',
            field=models.TextField(blank=True, null=True, verbose_name='Application Method'),
        ),
        migrations.AddField(
            model_name='product',
            name='application_method_mr',
            field=models.TextField(blank=True, null=True, verbose_name='Application Method (Marathi)'),
        ),
        migrations.AddField(
            model_name='product',
            name='description',
            field=models.TextField(blank=True, null=True, verbose_name='Product Description'),
        ),
        migrations.AddField(
            model_name='product',
            name='description_mr',
            field=models.TextField(blank=True, null=True, verbose_name='Description (Marathi)'),
        ),
        migrations.AddField(
            model_name='product',
            name='low_stock_threshold',
            field=models.IntegerField(default=10, help_text='Alert when stock falls below this quantity'),
        ),
        migrations.AddField(
            model_name='product',
            name='precautions',
            field=models.TextField(blank=True, null=True, verbose_name='Precautions'),
        ),
        migrations.AddField(
            model_name='product',
            name='precautions_mr',
            field=models.TextField(blank=True, null=True, verbose_name='Precautions (Marathi)'),
        ),
        migrations.AddField(
            model_name='productsku',
            name='max_stock_level',
            field=models.IntegerField(default=100, help_text='Maximum stock capacity'),
        ),
        migrations.AddField(
            model_name='productsku',
            name='mrp',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='MRP'),
        ),
        migrations.AddField(
            model_name='productsku',
            name='reorder_level',
            field=models.IntegerField(default=10, help_text='Minimum stock level before reorder'),
        ),
        migrations.AddField(
            model_name='productsku',
            name='stock_quantity',
            field=models.IntegerField(default=0, help_text='Current stock quantity'),
        ),
        migrations.CreateModel(
            name='StockAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('alert_type', models.CharField(choices=[('LOW_STOCK', 'Low Stock'), ('OUT_OF_STOCK', 'Out of Stock'), ('OVERSTOCK', 'Overstock')], max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('ACKNOWLEDGED', 'Acknowledged'), ('RESOLVED', 'Resolved')], default='ACTIVE', max_length=20)),
                ('stock_level_at_alert', models.IntegerField()),
                ('threshold_level', models.IntegerField()),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='inventory.productsku')),
            ],
            options={
                'verbose_name': 'Stock Alert',
                'verbose_name_plural': 'Stock Alerts',
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StockHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_type', models.CharField(choices=[('PURCHASE', 'Purchase/Stock In'), ('SALE', 'Sale/Stock Out'), ('ADJUSTMENT', 'Manual Adjustment'), ('RETURN', 'Return'), ('DAMAGE', 'Damage/Loss'), ('TRANSFER', 'Transfer'), ('INITIAL', 'Initial Stock')], max_length=20)),
                ('quantity_before', models.IntegerField(help_text='Stock quantity before transaction')),
                ('quantity_changed', models.IntegerField(help_text='Quantity added (+) or removed (-)')),
                ('quantity_after', models.IntegerField(help_text='Stock quantity after transaction')),
                ('reference_number', models.CharField(blank=True, help_text='Invoice/Order number', max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('transaction_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_transactions', to=settings.AUTH_USER_MODEL)),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_history', to='inventory.productsku')),
            ],
            options={
                'verbose_name': 'Stock History',
                'verbose_name_plural': 'Stock History',
                'ordering': ['-transaction_date', '-created_at'],
                'abstract': False,
            },
        ),
    ]
